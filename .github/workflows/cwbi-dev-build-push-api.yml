#This is a basic workflow to help you get started with Actions
name: Build DB api Image, Push to Dev

# Controls when the action will run. Invokes the workflow on push events but only for the main branch
on:
  push:
    branches: [cwbi-dev]
    paths:
      - .github/workflows/cwbi-dev-build-push-api.yml
      - 'services/api/**'
  workflow_dispatch:

env:
  AWS_REGION: us-gov-west-1 #Change to reflect your Region
  ROLE_TO_ASSUME: arn:aws-us-gov:iam::718787032875:role/github-actions-ecr-hhc-shared
  ECR_REPOSITORY: hhc-shared-api
  IMAGE_TAG: dev
  PATH_TO_DOCKERFILE: services/api
  
# Permission can be added at job level or workflow level
permissions:
  id-token: write # This is required for requesting the JWT
  contents: read # This is required for actions/checkout
jobs:
  Build-Push-api-to-Dev:
    runs-on: ubuntu-latest
    steps:
      - name: Git clone the repository
        uses: actions/checkout@v4
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: ${{ env.ROLE_TO_ASSUME }}
          output-credentials: true
      # Hello from AWS: WhoAmI
      - name: Sts GetCallerIdentity
        run: |
          aws sts get-caller-identity
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
        with:
          mask-password: 'true'
      - name: Build Image; Push to ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          docker build --push \
          --tag $ECR_REGISTRY/${{ env.ECR_REPOSITORY }}:latest \
          --tag $ECR_REGISTRY/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }} \
          ${{ env.PATH_TO_DOCKERFILE }}
      - name: ECR Logout
        if: always()
        run: docker logout ${{ steps.login-ecr.outputs.registry }}

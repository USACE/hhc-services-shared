# *~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~
# FROM runner running flyway with the shapefiles
# *~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~
FROM flyway/flyway AS runner

# env vars for FLYWAY
ENV FLYWAY_EDITION=community
ENV FLYWAY_LOCATIONS=filesystem:/flyway/sql

# version of the archive for the geometry migration
ARG GEOM_VERSION=v0.1.1-alpha

# env vars
ENV OPT_MIGRATION=/opt/migration

# solving possible issue of APT behind a proxy
RUN cat <<EOF > /etc/apt/apt.conf.d/99proxy
Acquire::http::Pipeline-Depth 0;
Acquire::http::No-Cache true;
Acquire::BrokenProxy true;
EOF

#
RUN apt-get update \
    && apt-get install -y postgis postgresql-client unzip curl \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# the main migration into the image
# local migrations for testing is defined in the docker-compose file
COPY ./main /flyway/sql/main

# set the working directory
WORKDIR ${OPT_MIGRATION}

# District Geometry used in a bash script migration
COPY ./dist_geom ./dist_geom

# add the release asset for the tagged version defined in GEOM_VERSION
ADD https://github.com/USACE/hhc-services-shared/releases/download/${GEOM_VERSION}/geometry.tar.gz ${OPT_MIGRATION}

# decompress/expand archive and remove original download
# if the archive was created with directories, move the files to the current directory
RUN tar -xzvf geometry.tar.gz \
    && rm -f geometry.tar.gz

# entrypoint for flyway with arguments (CMD)
WORKDIR /flyway

ENTRYPOINT ["flyway"]

CMD ["-connectRetries=60", "migrate"]
